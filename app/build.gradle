plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion config.compiledSdk
    buildToolsVersion config.buildToolVersion

    defaultConfig {
        applicationId "com.isidroid.b21"
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk

        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = 1
        def versionBuild = 0

        versionCode versionMajor * 100000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
        setProperty("archivesBaseName", applicationId + "." + versionName)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("ISIDROID_KEYSTORE"))
            storePassword System.getenv("ISIDROID_KEYSTORE_PASSWORD") ?: 'UNSET'
            keyAlias System.getenv("ISIDROID_KEY_ALIAS") ?: 'UNSET'
            keyPassword System.getenv("ISIDROID_KEY_PASSWORD") ?: 'UNSET'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures { dataBinding true }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // google
    implementation "androidx.core:core-ktx:$androidx_core"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${swipe_refresh}"
    implementation "androidx.fragment:fragment-ktx:$fragmentktx"
    implementation "androidx.activity:activity-ktx:$activityx"

    // Google Lifecycle
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxjava_convert"
    implementation "com.squareup.retrofit2:converter-gson:$rxjava_convert"

    // network
    implementation "com.squareup.okio:okio:$okio"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    // tools
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation("com.github.bumptech.glide:glide:$glide")
    kapt "com.github.bumptech.glide:compiler:$glide"
}